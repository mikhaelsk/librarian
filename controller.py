from views import *
from models import *
from utils import *
import sys
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QKeySequence
from PyQt5.QtWidgets import (QAction, QActionGroup, QApplication, QFrame,
        QLabel, QMainWindow, QMenu, QMessageBox, QSizePolicy, QVBoxLayout,
        QWidget)

'''
main UI class inherited from the autogenerated by pyuic5 uimain.ui -o uimain.py
'''
class LibrarianMainWindow(Ui_MainWindow):
    def __init__( self, window, mainController ):
        self.controller = mainController
        ui = Ui_MainWindow()
        #ui.setupUi(mygui)
        Ui_MainWindow.__init__( self )
        self.setupUi( window )
        #self.addFolderButton.clicked.connect(self.AddFolder)
        self.inputPathLine.returnPressed.connect( self.AddFolder )
        #self.addFileButton.clicked.connect(self.inputPathLine.update)
        #self.addTagButton.clicked.connect(self.inputTagLine.update)
        #self.deleteTagButton.pressed.connect(self.listView.update)
        #self.inputTagFilter.returnPressed.connect(self.columnView.update)
    
    '''
    AddFolder slot for signals
    '''
    def AddFolder( self ):
        self.controller.logger.WriteToLog('Added new path: ' + self.inputPathLine.text())
        self.controller.model.AddFolder( self.inputPathLine.text() )

class Controller():
    def __init__( self ):
        self.model = MainModel()
        self.logger = Logger()
        self.logger.WriteToLog( "Init Done\n" )

    def PrintToLog( txt ):
        self.logger.WriteToLog( txt )

       
'''
MAIN function of this application
'''
if __name__ == "__main__":
    app = QApplication( sys.argv )
    mygui = QtWidgets.QMainWindow()
    controller = Controller()
    librarian = LibrarianMainWindow( mygui, controller )
    mygui.show()
    
    sys.exit( app.exec_() )
    
    
#http://projects.skylogic.ca/blog/how-to-install-pyqt5-and-build-your-first-gui-in-python-3-4/
